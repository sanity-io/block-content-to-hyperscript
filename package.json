{
  "name": "@sanity/block-content-to-hyperscript",
  "description": "Function for transforming Sanity block content to HyperScript",
  "version": "3.0.1",
  "main": "lib/index.js",
  "umd": "umd/blocksToHyperScript.min.js",
  "unpkg": "umd/blocksToHyperScript.min.js",
  "scripts": {
    "browserify": "NODE_ENV=production BROWSERIFY_ENV=build DEBUG='' browserify -t envify -g uglifyify lib/index.js -o umd/blocksToHyperScript.js --standalone=blocksToHyperScript",
    "build": "npm run clean && npm run compile && npm run browserify && npm run minify",
    "watch": "npm run compile -- --watch",
    "clean": "rimraf lib coverage .nyc_output umd/*.js",
    "compile": "babel --source-maps --copy-files -d lib/ src/",
    "coverage": "npm test -- --coverage",
    "minify": "uglifyjs -c -m -- umd/blocksToHyperScript.js > umd/blocksToHyperScript.min.js",
    "postpublish": "npm run clean",
    "posttest": "eslint .",
    "prepublishOnly": "npm run build",
    "test": "jest"
  },
  "keywords": [],
  "author": "Sanity <hello@sanity.io>",
  "license": "MIT",
  "dependencies": {
    "@sanity/generate-help-url": "^0.140.0",
    "@sanity/image-url": "^0.140.15",
    "hyperscript": "^2.0.2",
    "object-assign": "^4.1.1"
  },
  "devDependencies": {
    "@babel/cli": "^7.4.4",
    "@babel/preset-env": "^7.4.5",
    "@sanity/block-content-tests": "^0.3.0",
    "babel-eslint": "^10.0.1",
    "browserify": "^16.2.2",
    "envify": "^4.1.0",
    "eslint": "^5.16.0",
    "eslint-config-prettier": "^4.3.0",
    "eslint-config-sanity": "^3.0.1",
    "eslint-plugin-import": "^2.17.2",
    "jest": "^24.8.0",
    "prettier": "^1.17.1",
    "rimraf": "^2.6.3",
    "uglify-js": "^3.5.15",
    "uglifyify": "^5.0.2"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/sanity-io/block-content-to-hyperscript.git"
  },
  "bugs": {
    "url": "https://github.com/sanity-io/block-content-to-hyperscript/issues"
  },
  "homepage": "https://github.com/sanity-io/block-content-to-hyperscript#readme",
  "jest": {
    "testURL": "http://localhost/",
    "collectCoverageFrom": [
      "src/**/*.js"
    ]
  }
}
